
甲壳虫技术论坛 让你的人生充满精彩
http://bbs.jkcing.com
★甲壳虫技术领域VIP教学介绍★ 
http://vip.jkcing.com/

讲师：天真的狼	
动画名称：C语言  

C语言之第三课: 库函数详解(上)


printf()
scanf()

stdio.h
#include<stdio.h>

      1. <assert.h>定义宏assert()
      2. <ctype.h>字符处理
      3. <errno.h>错误报告
      4. <float.h>定义与实现相关的浮点
      5. <limits.h>定义与实现相关的各种极限值
      6. <locale.h>支持函数setlocale() 
      7. <math.h>数学函数库使用的各种定义
      8. <setjmp.h>支持非局部跳转
      9. <signal.h>定义信号值
      10. <stdarg.h>支持可变长度的变元列表
      11. <stddef.h>定义常用常数
      12. <stdio.h>支持文件输入和输出
      13. <stdlib.h>其他各种声明
      14. <string.h>支持串函数
      15. <time.h>支持系统时间函数

求幂  计算平方根 绝对值

#include<math.h>

int abs(int n)   //计算整数N的绝对值
long labs(long n)    
double fabs(double x) 

#include<stdio.h>
#include<math.h>
int main()
{
	int x;
	x=-5;
	printf("|%d|=%d\n",x,abs(x));
	x=0;
	printf("|%d|=%d\n",x,abs(x));
	x=+5;
	printf("|%d|=%d\n",x,abs(x));
	getchar();
	return 0;
} 

double pow(double x,double y)    
double sqrt(double x)     

#include<stdio.h>
#include<math.h>
int main()
{
	printf("4^5=%f",pow(4.,5.));
	getchar();
	return 0;
}


指数函数和对数函数  逆函数

double exp(double x)   
double log(double x)    ln(x)

double sin(double x)    
double cos(double x)
double tan(double x)

注意参数范围：
对于sin和cos函数  x范围是[-1,1]

取整数函数 和 取余函数

double ceil(double x)
double floor(double x)   
double fmod(double x,double y)  


#include<stdio.h>
#include<math.h>
int main()
{
	double x,y,i;
	x=74.12;
	y=6.4;
	printf("74.12/6.4: %f\n",fmod(x,y));
	x=74.12;
	y=-6.4;
	printf("74.12/(-6.4): %f\n",fmod(x,y));
	x=modf(-74.12,&i);
	printf("-74.12=%.0f+(%.2f)",i,x);
	getchar();
	return 0;
}


\0

#include<string.h>

int strlen(char *d)
NULL

char *strcat(char *d,char *s)  
char *strncat(char *d,char *s,int n)


#include<stdio.h>
#include<string.h>
int main()
{
	char d1[20]="hello";
	char d2[20]="hello";
	char *s1="word";
	char *s2="worldabc";
	strcat(d1,s1);
	printf("%s\n",d1);
	strncat(d2,s2,6);
	printf("%s\n",d2);
	getchar;
	return 0;
}


char *strcpy(char *d,char *s)
char *strncpy(char *d,char *s,int n)
void *memcpy(void *d,void *s,int n)
void *memmove(void *d,void *s,int n)